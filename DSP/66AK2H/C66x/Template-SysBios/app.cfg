/* XDC runtime packages */
var System = xdc.useModule('xdc.runtime.System');
var SysStd  = xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy = SysStd;
var Memory = xdc.useModule('xdc.runtime.Memory');
var Log = xdc.useModule('xdc.runtime.Log');
var Diags = xdc.useModule('xdc.runtime.Diags'); 

/* Load and use the CSL, CPPI and QMSS packages */
var devType = "k2h"
var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = devType;
/* Load the CPPI package */
var Cppi                        =   xdc.loadPackage('ti.drv.cppi'); 
/* Load the QMSS package */
var Qmss                        =   xdc.loadPackage('ti.drv.qmss');
/* Load the RM package */
var Rm                          =   xdc.loadPackage('ti.drv.rm');

//Program.stack = 0x8000;

/* sysbios packages */
var BIOS = xdc.useModule('ti.sysbios.BIOS');
BIOS.heapSize = 0x8000;
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Idle = xdc.useModule('ti.sysbios.knl.Idle');

/* IPC packages */
var Settings = xdc.module('ti.sdo.ipc.family.Settings');
var SharedRegion = xdc.useModule('ti.sdo.ipc.SharedRegion');
var MultiProc = xdc.useModule('ti.sdo.utils.MultiProc');
var Ipc         = xdc.useModule('ti.sdo.ipc.Ipc');
var HeapBufMP   = xdc.useModule('ti.sdo.ipc.heaps.HeapBufMP');


Program.sectMap["systemHeap"] = Program.platform.stackMemory;
//Task.defaultStackSize = 3*1024;

SharedRegion.translate = false;

var memmap = Program.cpu.memoryMap;

Startup = xdc.useModule('xdc.runtime.Startup');
Startup.firstFxns.$add('&myStartupFxn');

MultiProc.setConfig(null, ["CORE0", "CORE1", "CORE2", "CORE3", "CORE4", "CORE5", "CORE6", "CORE7"]);//

for (var i = 0; i < MultiProc.numProcessors; i++) {
    Ipc.setEntryMeta({
        remoteProcId: i,
        setupNotify: false,
        setupMessageQ: false,       
    });
}

/* Synchronize all processors (this will be done in Ipc_start) */
Ipc.procSync = Ipc.ProcSync_ALL;

SharedRegion.setEntryMeta(0,
    { base: 0x0C000000,
      len: 0x00008000,
      ownerProcId: 0,
      isValid: true,
      name: "sharemem",
    });

/* Place user sections */
Program.sectMap[".init_array"] = "L2SRAM";
Program.sectMap[".sharedGRL"] = "L2SRAM";
Program.sectMap[".sharedPolicy"] = "L2SRAM";
Program.sectMap[".cio"] = "L2SRAM";

Program.sectMap[".qmss"] = "MSMCSRAM";
Program.sectMap[".cppi"] = "MSMCSRAM";
Program.sectMap[".rm"] = "MSMCSRAM";

Program.sectMap[".text"] = "DDR";
Program.sectMap[".stack"] = "L2SRAM";
Program.sectMap["systemHeap"] = "DDR";
//Program.sectMap[".data"] = "L2SRAM";
//Program.sectMap[".bss"] = "DDR";
Program.sectMap[".core0buf"] = "DDR";
Program.sectMap[".core1buf"] = "DDR";
Program.sectMap[".core1buf"] = "DDR";
Program.sectMap[".core2buf"] = "DDR";
 
/*
Program.sectMap["systemHeap"] = Program.platform.stackMemory;
Program.sectMap["task0Heap"] = Program.platform.dataMemory;
Program.sectMap["task1Heap"] = Program.platform.dataMemory;
Program.sectMap["task0Stack"] = Program.platform.stackMemory;
*/

/* Add idle function */
/*Idle.addFunc('&idl0Fxn');*/
/*
 *  @(#) ti.sysbios.genx; 2, 0, 0, 0,275; 4-29-2009 15:45:06; /db/vtree/library/trees/avala/avala-k25x/src/
 */

